{"version":3,"file":"static/js/761.9ecf6bfc.chunk.js","mappings":"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","sources":["calls/fecthCountries.ts","functions/fetchData.ts","functions/QuizBox.ts","functions/TokenKit.ts","Components/GamePitch.tsx"],"sourcesContent":["import axios from \"axios\";\n\nconst fecthCountries = async () => {\n    try {\n        let config = {\n            method: 'GET',\n            url: 'https://restcountries.com/v3.1/all'\n        }\n        let response = await axios(config);\n        return {\n            status : 200,\n            data : response.data,\n            timpestamp : Date.now(),\n            message : 'success'\n        }\n    } catch (error:any) {\n      return {\n        status : 500,\n        data : null,\n        timpestamp : Date.now(),\n        message : error?.data?.message || 'Opps! something went wrong please try again!!'\n\n      }\n    }\n}\n\nexport default fecthCountries;","import fecthCountries from \"../calls/fecthCountries\";\nimport uuid from \"react-uuid\";\n\nexport const fetchData  = async () => { \n   \n   let res = await fecthCountries()\n   return res.data.map((element:any)=>{\n      return {\n         id : uuid(),\n         name : element?.name?.common,\n         flag : element?.flags?.svg\n      }\n   })\n\n}","import { fetchData } from './fetchData';\n\nclass QuizBox {\n    protected contries: Array<{}> = [];\n    public playerName: string = 'anonymous';\n    constructor(name: string) {\n        this.playerName = name;\n    }\n\n    public async start() {\n        this.contries = await fetchData(); // id , flag , name ; \n    }\n\n    private random(arr: Array<any>) {\n        return arr[Math.floor(Math.random() * arr.length)];\n    }\n\n\n    private shuffle(arr: Array<any>) {\n        let desc: Array<number> = [];\n        let temp: Array<any> = [];\n        let src: Array<number> = [0, 1, 2, 3];\n        while (desc.length < src.length) {\n            let r = this.random(src);\n            if (!desc.includes(r)) desc.push(r);\n        }\n        for (let i = 0; i < src.length; i++) {\n            temp[desc[i]] = arr[i];\n        }\n        return temp;\n    }\n\n    public pick() {\n        let main = this.random(this.contries);\n        let dummy: Array<number> = [];\n        dummy.length = 3;\n        let ops = dummy.fill(0).map(ele => this.random(this.contries));\n        let res: any = {};\n        res.question = main;\n        res.options = ops.map((e: any) => { return { name: e.name } });\n        res.options.push({ name: main.name });\n        res.options = this.shuffle(res.options);\n        res.options = res.options.map((e: any, index: number) => { return { index: index + 1, name: e.name }});\n        return res;\n    }\n}\n\nexport default QuizBox;","import SimpleCrypto from \"simple-crypto-js\";\nconst crypto = new SimpleCrypto('SECRET_KEY_VERTYYY');\n\nconst tokenizer = {\n   sign : (v : string) => {\n     return crypto.encrypt(v);\n   },\n   \n   verify : (t : string) => {\n     return crypto.decrypt(t);\n   }\n}\n\nexport default tokenizer;","import React, { useEffect, useState } from 'react'\nimport QuizBox from '../functions/QuizBox';\nimport tokenizer from '../functions/TokenKit';\nimport failSound from '../assests/sounds/invalid-selection.mp3';\nimport sucessSound from '../assests/sounds/success.mp3';\nimport Loader from './Loader';\n\nexport default function GamePitch(props: any) {\n\n  const [options, setOptions] = useState([]);\n  const [falg, setflag] = useState();\n  const [falgName, setFlagName] = useState('');\n  const [count, setCount] = useState(1);\n  const [score, setScore] = useState(0);\n\n  const quiz = new QuizBox(props?.player);\n\n  const startGame = async () => {\n    await quiz.start();\n    let response = quiz.pick();\n    setOptions(response?.options);\n    setflag(response?.question?.flag);\n    let ans: string = tokenizer.sign(response?.question?.name);\n    setFlagName(ans);\n  };\n  const cleanup = () => {\n    document.querySelectorAll('[data-id=\"options\"]')\n      .forEach(element => {\n        element.classList.remove('bg-red-700');\n        element.classList.remove('bg-green-700');\n        element.classList.add('bg-[#911db4]');\n        element.classList.remove('pointer-events-none');\n        element.classList.remove('opacity-95');\n        element.classList.remove('shake');\n      })\n  }\n\n  const next = () => {\n    if (count === 25) {\n      props.setFinalScore(score)\n      props.setTab(2);\n    }\n    cleanup();\n    setCount(prev => prev + 1);\n  }\n\n  const ColorizeOptions = (actual: any) => {\n    let correctArr: any = options.filter((option: any) => option?.name === actual);\n    let targetId = correctArr[0].index;\n    let indexArray: Array<number> = [1, 2, 3, 4];\n    (document.querySelector(`#opt${targetId}`) as HTMLElement).classList.remove('bg-[#911db4]');\n    (document.querySelector(`#opt${targetId}`) as HTMLElement).classList.add('bg-green-700');\n    let wrongAnwersIndex = indexArray.filter(index => index !== targetId);\n    wrongAnwersIndex.forEach((each: number) => {\n      (document.querySelector(`#opt${each}`) as HTMLElement).classList.remove('bg-[#911db4]');\n      (document.querySelector(`#opt${each}`) as HTMLElement).classList.add('bg-red-700');\n    })\n  };\n\n  const disableSelection = () => {\n    document.querySelectorAll('[data-id=\"options\"]')\n      .forEach(element => {\n        element.classList.add('pointer-events-none');\n        element.classList.add('opacity-95');\n      });\n  }\n  const playSound = (status: string) => {\n    let audio = new Audio();\n    audio.src = status === 'failed' ? failSound : sucessSound;\n    audio.load();\n    audio.play();\n  };\n\n  const chooseAnswer = (event: any) => {\n    disableSelection();\n    let touched: string = event.target.innerText;\n    let final = tokenizer.verify(falgName);\n    if (touched === final) {\n      playSound('success');\n      setScore(prev => prev + 1);\n    }\n    else {\n      playSound('failed');\n      event.currentTarget.classList.add('shake');\n    }\n    ColorizeOptions(final);\n  }\n  useEffect(() => {\n    startGame();\n  }, [count]);\n\n  return (\n    <div className='flex justify-center items-center gap-3 py-10 px-6 md:px-0'>\n\n      {options.length ? (\n        <div>\n          <div className='text-[30px] font-semibold'>\n          <b>{count}/25</b>\n          </div>\n          <div className=' mt-8 max-w-[400px] max-h-[200px] flex justify-center items-center'>\n            <img src={falg} alt=\"flag\" className='w-[400px] h-[200px] object-fill' />\n          </div>\n          <div className='mt-6 flex flex-col gap-3'>\n            {\n              options.map((option: any, index) => (\n                <div\n                  className='p-2 cursor-pointer bg-[#911db4] flex  justify-center rounded-md'\n                  key={index}\n                  onClick={chooseAnswer}\n                  id={`opt${option?.index}`}\n                  data-id=\"options\"\n                >\n                  <p className='text-[20px] select-none'>{option?.name}</p>\n                </div>\n              ))\n            }\n          </div>\n          <button\n            onClick={next}\n            className='px-6 py-3 select-none bg-pink-600 rounded-md mt-6 md:ml-[160px] ml-[150px] '>next</button>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  )\n}\n"],"names":["fecthCountries","config","method","url","axios","response","status","data","timpestamp","Date","now","message","fetchData","res","map","element","id","uuid","name","common","flag","flags","svg","QuizBox","contries","playerName","this","arr","Math","floor","random","length","desc","temp","src","r","includes","push","i","main","dummy","ops","fill","ele","question","options","e","shuffle","index","crypto","SimpleCrypto","sign","v","encrypt","verify","t","decrypt","GamePitch","props","useState","setOptions","falg","setflag","falgName","setFlagName","count","setCount","score","setScore","quiz","player","startGame","start","pick","ans","tokenizer","playSound","audio","Audio","failSound","sucessSound","load","play","chooseAnswer","event","document","querySelectorAll","forEach","classList","add","touched","target","innerText","final","prev","currentTarget","actual","targetId","filter","option","querySelector","remove","each","ColorizeOptions","useEffect","className","alt","onClick","setFinalScore","setTab","Loader"],"sourceRoot":""}